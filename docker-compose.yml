services:
  smtp:
    image: maildev/maildev:latest
    hostname: ${SMTP_HOST}
    ports:
      - ${SMTP_PORT}:${SMTP_PORT}
      - ${SMTP_WEB_PORT}:1080
    command:
      - "-s"
      - ${SMTP_PORT}
    healthcheck:
      test: ["CMD-SHELL", "wget -O - http://localhost:1080/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15
    hostname: ${POSTGRES_HOST}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    build:
      context: ./migrations
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL
    volumes:
      - ./migrations:/migrations
    depends_on:
      db:
        condition: service_healthy
    command:
      - "-drop"
      - "-up"
    network_mode: host

  testdb:
    image: postgres:15
    ports:
      - ${TESTDB_PORT}:5432
    environment:
      - POSTGRES_PASSWORD=password
    restart: unless-stopped
    volumes:
      - type: tmpfs
        target: /var/lib/postgresql/data/
    command:
      - "postgres"
      - "-c"
      - "fsync=off"
      - "-c"
      - "shared_buffers=1024MB"
      - "-c"
      - "synchronous_commit=off"
      - "-c"
      - "full_page_writes=off"
      - "-c"
      - "log_statement=all"
      - "-c"
      - "max_connections=1000"

volumes:
  postgres-data:
